{:objects
 {:Link
  {:description "A link posted to Hacker News"
   :fields
   {:id {:type (non-null ID)}
    :description {:type (non-null String)
                  :description "Link description"}
    :url {:type (non-null String)
          :description "Link url"}
    :postedBy {:type :User
               :description "User who posted this link"
               :resolve :Link/user}
    :votes {:type (list :Vote)
            :description "Link's votes"
            :resolve :Link/votes}
    }
   }

  :User
  {:description "User posting links to Hacker News"
   :fields
   {:id {:type (non-null ID)}
    :name {:type (non-null String)
           :description "User's name"}
    :email {:type (non-null String)
            :description "User's email"}
    :password {:type (non-null String)
               :description "User's password"}
    :links {:type (list :Link)
            :description "User's published links"
            :resolve :User/links}
    }}

  :AuthPayload
  {:description "Data returned by Login and Signup"
   :fields
   {:token {:type String
            :description "User's token"}
    :user {:type :User
           :description "User's data"}
    }}

  :Vote
  {:description "A vote for a link submitted to Hacker News"
   :fields
   {:id {:type (non-null ID)}
    :link {:type :Link
           :description "Voted link"}
    :user {:type :User
           :description "Voting user"}
    }}

  }

 :queries
 {:info
  {:type (non-null String)
   :resolve :query/info}

  :feed
  {:type (list :Link)
   :resolve :query/feed}}

 :mutations
 {:post
  {:type (non-null :Link)
   :description "Post a new Link"
   :args
   {
    :url {:type (non-null String)
          :description "Link url"}
    :description {:type (non-null String)
                  :description "Link description"}
    }
   :resolve :mutation/post!}

  :signup
  {:type (non-null :AuthPayload)
   :description "User registration"
   :args
   {
    :email {:type (non-null String)
            :description "User's email"}
    :password {:type (non-null String)
               :description "User's password"}
    :name {:type (non-null String)
           :description "User's name"}
    }
   :resolve :mutation/signup!}

  :login
  {:type :AuthPayload
   :description "User login"
   :args
   {
    :email {:type (non-null String)
            :description "User's email"}
    :password {:type (non-null String)
               :description "User's password"}
    }
   :resolve :mutation/login!}

  :vote
  {:type :Vote
   :description "User voting"
   :args
   {
    :link_id {:type (non-null ID)
              :description "User's email"}
    }
   :resolve :mutation/vote!}

  }

  :subscriptions
 {:newLink
  {:type :Link
   :stream :subscription/newLink}
  }

}
